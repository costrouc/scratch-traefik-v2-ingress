* Minikube

#+begin_src shell :results output
  minikube delete
#+end_src

#+RESULTS:
: * Deleting "minikube" in docker ...
: * Deleting container "minikube" ...
: * Removing /home/costrouc/.minikube/machines/minikube ...
: * Removed all traces of the "minikube" cluster.

#+begin_src shell :results output
  minikube start --disk-size 10g --cpus 2 --memory 4096 --driver docker
#+end_src

#+RESULTS:
: * minikube v1.13.0 on Nixos "21.03pre-git (Okapi)"
: * Using the docker driver based on user configuration
: * Starting control plane node minikube in cluster minikube
: * Creating docker container (CPUs=2, Memory=4096MB) ...
: * Preparing Kubernetes v1.19.0 on Docker 19.03.8 ...
: * Verifying Kubernetes components...
: * Enabled addons: default-storageclass, storage-provisioner
: * Done! kubectl is now configured to use "minikube" by default

#+begin_src shell
  ip route
#+end_src

#+RESULTS:
| default          | via | 192.168.1.1 | dev   | wlp4s0 | proto | dhcp | metric |           600 |          |     |
| 172.17.0.0/16    | dev | docker0     | proto | kernel | scope | link | src    |    172.17.0.1 |          |     |
| 192.168.1.0/24   | dev | wlp4s0      | proto | kernel | scope | link | src    | 192.168.1.108 | metric   | 600 |
| 192.168.39.0/24  | dev | virbr4      | proto | kernel | scope | link | src    |  192.168.39.1 | linkdown |     |
| 192.168.42.0/24  | dev | virbr1      | proto | kernel | scope | link | src    |  192.168.42.1 | linkdown |     |
| 192.168.122.0/24 | dev | virbr0      | proto | kernel | scope | link | src    | 192.168.122.1 | linkdown |     |
| 192.168.200.0/24 | dev | virbr3      | proto | kernel | scope | link | src    | 192.168.200.1 | linkdown |     |

Make sure to set ip in docker0 range

#+begin_src shell
  minikube addons configure metallb
#+end_src

#+begin_src shell
  minikube addons enable metallb
#+end_src

#+RESULTS:
: * The 'metallb' addon is enabled

* Deployment

Apply Deployment

#+begin_src shell :results output
  kubectl apply -k traefik
#+end_src

#+RESULTS:
: serviceaccount/traefik-ingress-controller unchanged
: clusterrole.rbac.authorization.k8s.io/traefik-ingress-controller unchanged
: clusterrolebinding.rbac.authorization.k8s.io/traefik-ingress-controller unchanged
: service/traefik-ingress-service unchanged
: daemonset.apps/traefik-daemon-set unchanged

#+begin_src shell
  kubectl get pods -A
#+end_src

#+RESULTS:
| NAMESPACE      | NAME                             | READY | STATUS  | RESTARTS | AGE |
| kube-system    | coredns-f9fd979d6-w4jnt          | 1/1   | Running |        0 | 20m |
| kube-system    | etcd-minikube                    | 1/1   | Running |        0 | 20m |
| kube-system    | kube-apiserver-minikube          | 1/1   | Running |        0 | 20m |
| kube-system    | kube-controller-manager-minikube | 1/1   | Running |        0 | 20m |
| kube-system    | kube-proxy-lrp59                 | 1/1   | Running |        0 | 20m |
| kube-system    | kube-scheduler-minikube          | 1/1   | Running |        0 | 20m |
| kube-system    | storage-provisioner              | 1/1   | Running |        0 | 20m |
| kube-system    | traefik-daemon-set-zq7pl         | 1/1   | Running |        0 | 4s  |
| metallb-system | controller-675d6c9976-rhx57      | 1/1   | Running |        0 | 12m |
| metallb-system | speaker-jd5t6                    | 1/1   | Running |        0 | 12m |

#+begin_src shell
  kubectl get services -A
#+end_src

#+RESULTS:
| NAMESPACE   | NAME                    | TYPE         |    CLUSTER-IP | EXTERNAL-IP   | PORT(S)                    | AGE   |
| default     | kubernetes              | ClusterIP    |     10.96.0.1 | <none>        | 443/TCP                    | 20m   |
| kube-system | kube-dns                | ClusterIP    |    10.96.0.10 | <none>        | 53/UDP,53/TCP,9153/TCP     | 20m   |
| kube-system | traefik-ingress-service | LoadBalancer | 10.111.12.146 | 172.17.10.100 | 80:30528/TCP,443:30379/TCP | 5m51s |

#+begin_src shell :results output
  minikube ip
#+end_src

#+RESULTS:
: 172.17.0.3

#+begin_src shell :results output
  echo "insecure"
  curl 172.17.10.100:80

  echo "
  secure"
  curl 172.17.10.100:443
#+end_src

#+RESULTS:
: insecure
: Moved Permanently
: secure
: 404 page not found

* Creating Ingress Resource

For the following to work you need to modify your DNS. Likely
=/etc/hosts= is the easiest way to do this.

#+begin_src ini
  ...
  minikube.aves.internal 172.17.10.100
  ...
#+end_src

Now apply the new dashboard

#+begin_src shell :results output
  kubectl apply -f whoami.yaml
  kubectl apply -f traefik-dashboard.yaml
#+end_src

#+RESULTS:
: service/whoami created
: deployment.apps/whoami created
: ingress.extensions/whoami created
: service/traefik-dashboard unchanged
: ingress.extensions/traefik-dashboard configured

#+begin_src shell :results output
  curl -k https://minikube.aves.internal/dashboard/
#+end_src

#+RESULTS:
: <!DOCTYPE html><html><head><title>Traefik</title><meta charset=utf-8><meta name=description content="Traefik UI"><meta name=format-detection content="telephone=no"><meta name=msapplication-tap-highlight content=no><meta name=viewport content="user-scalable=no,initial-scale=1,maximum-scale=1,minimum-scale=1,width=device-width"><link rel=icon type=image/png href=statics/app-logo-128x128.png><link rel=icon type=image/png sizes=16x16 href=statics/icons/favicon-16x16.png><link rel=icon type=image/png sizes=32x32 href=statics/icons/favicon-32x32.png><link rel=icon type=image/png sizes=96x96 href=statics/icons/favicon-96x96.png><link rel=icon type=image/ico href=statics/icons/favicon.ico><link href=css/284ee262.162ea886.css rel=prefetch><link href=css/2b31cb68.b69a4f0a.css rel=prefetch><link href=css/2fc4e300.15d951f1.css rel=prefetch><link href=css/3e3ce03c.9b22e80f.css rel=prefetch><link href=css/46fd955e.9b22e80f.css rel=prefetch><link href=css/491024e9.9b22e80f.css rel=prefetch><link href=css/52875482.9b22e80f.css rel=prefetch><link href=css/6d73c73c.9b22e80f.css rel=prefetch><link href=css/70aa9655.0e433876.css rel=prefetch><link href=css/77d911b4.9b22e80f.css rel=prefetch><link href=css/ad8e29f4.b5aeb305.css rel=prefetch><link href=css/b34404c8.9b22e80f.css rel=prefetch><link href=css/c8abb44a.ad36de1b.css rel=prefetch><link href=css/d2880142.dd7c0af2.css rel=prefetch><link href=css/dba10db0.350172b4.css rel=prefetch><link href=js/284ee262.91e29d10.js rel=prefetch><link href=js/2b31cb68.af1fdfbd.js rel=prefetch><link href=js/2d21e8fd.c00ac0e6.js rel=prefetch><link href=js/2fc4e300.35f36a4b.js rel=prefetch><link href=js/3e3ce03c.293f4729.js rel=prefetch><link href=js/46fd955e.5ae3567e.js rel=prefetch><link href=js/491024e9.fca48131.js rel=prefetch><link href=js/52875482.65e645a6.js rel=prefetch><link href=js/6d73c73c.935c393f.js rel=prefetch><link href=js/70aa9655.2470591c.js rel=prefetch><link href=js/77d911b4.40543ff4.js rel=prefetch><link href=js/ad8e29f4.e68646e2.js rel=prefetch><link href=js/b34404c8.7a4b9be8.js rel=prefetch><link href=js/c8abb44a.11069c8c.js rel=prefetch><link href=js/d2880142.1586712d.js rel=prefetch><link href=js/dba10db0.4b33a696.js rel=prefetch><link href=css/app.03db6149.css rel=preload as=style><link href=js/app.4b9719d8.js rel=preload as=script><link href=js/runtime.be240131.js rel=preload as=script><link href=js/vendor.569cebaa.js rel=preload as=script><link href=css/app.03db6149.css rel=stylesheet></head><body><div id=q-app></div><script type=text/javascript src=js/app.4b9719d8.js></script><script type=text/javascript src=js/runtime.be240131.js></script><script type=text/javascript src=js/vendor.569cebaa.js></script></body></html>

#+begin_src shell :results output
  curl -k https://minikube.aves.internal/who/
#+end_src

#+RESULTS:
#+begin_example
Hostname: whoami-78447d957f-z8lvf
IP: 127.0.0.1
IP: 172.18.0.5
RemoteAddr: 172.18.0.4:54108
GET /who/ HTTP/1.1
Host: minikube.aves.internal
User-Agent: curl/7.72.0
Accept: */*
Accept-Encoding: gzip
X-Forwarded-For: 172.18.0.1
X-Forwarded-Host: minikube.aves.internal
X-Forwarded-Port: 443
X-Forwarded-Proto: https
X-Forwarded-Server: traefik-daemon-set-zq7pl
X-Real-Ip: 172.18.0.1

#+end_example
